@page "/admin/orders"
@inherits OwningComponentBase<IBuyRepository>

<OrdersTable TableTitle="Unshipped Orders" Orders="UnshippedOrders" ButtonLabel="Shipped" OrderSelected="CollectOrder"></OrdersTable>
<OrdersTable TableTitle="Shipped Orders" Orders="ShippedOrders" ButtonLabel="Shipped" OrderSelected="ResetOrder"></OrdersTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>


@code {
    public IBuyRepository repo => Service;

    public IEnumerable<Buy> AllOrders { get; set; }
    public IEnumerable<Buy> UnshippedOrders { get; set; }
    public IEnumerable<Buy> ShippedOrders { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        AllOrders = await repo.Buys.ToListAsync();
        UnshippedOrders = AllOrders.Where(x => !x.OrderReceived);
        ShippedOrders = AllOrders.Where(x => x.OrderReceived);
    }
    public void CollectOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipped)
    {
        Buy o = repo.Buys.FirstOrDefault(x => x.itemId == id);
        o.OrderReceived = shipped;
        repo.SaveBuy(o);
    }
}