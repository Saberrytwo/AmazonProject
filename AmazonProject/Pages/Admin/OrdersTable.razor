<table class="table table-sm table-striped table-bordered">
    <thead class="ligh">
        <tr colspan="5" class="text-center">@TableTitle</tr>
    </thead>
    <tbody>
        @if (Orders?.Count() > 0)
        {
            @foreach (Buy o in Orders)
            {
        <tr>
            <td>@o.Name</td>
            <td>@o.Zip</td>
            <th>Project</th>
            <th>Quantity</th>

            <td>
                <button class="btn btn-sm btn-danger" @onclick="@(x => OrderSelected.InvokeAsync(o.itemId))">
                    @ButtonLabel
                </button>
            </td>

        </tr>
                @foreach (CartLineItem bli in o.Lines)
                {
                    <tr>
                        <td colspan="2"></td>
                        <td>@bli.Book.Title</td>
                        <td>@bli.Quantity</td>
                    </tr>
                }
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Orders</td>
            </tr>
        }
    </tbody>
</table>


@code {
    [Parameter]
    public string TableTitle { get; set; } = "Orders";  //This just gives it a default value


    [Parameter]
    public IEnumerable<Buy> Orders { get; set; } //just a list of data that is easy to enumerate through


    [Parameter]
    public string ButtonLabel { get; set; } = "Shipped";


    [Parameter]
    public EventCallback<int> OrderSelected { get; set; } //its a public EventCallback of type int that we call OrderSelected




}

